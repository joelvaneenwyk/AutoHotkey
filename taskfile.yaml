# https://taskfile.dev

version: '3'

tasks:
  default:
    cmds:
      - task: cmake-build
        vars: { CMAKE_PRESET: 'x64-windows' }

  clang:
    cmds:
      - task: cmake-build
        vars: { CMAKE_PRESET: 'x64-windows-clang' }

  msbuild:
    vars:
      MSBUILD:
        sh: | # shell
          strings=("Preview" "Enterprise" "Professional" "Community")
          for str in "${strings[@]}"
          do
            result="C:/Program Files/Microsoft Visual Studio/2022/${str}/MSBuild/Current/Bin/amd64/MSBuild.exe"
            if [ -e "$result" ]; then
              echo "$result"
              break
            fi
          done
      MSBUILD_CONFIG: '{{ .CONFIG | default "Debug" }}'
      MSBUILD_SOLUTION: '{{ joinPath .TASKFILE_DIR (.SOLUTION | default "AutoHotkeyx.sln") }}'
      MSBUILD_PLATFORM: '{{ .PLATFORM | default "x64" }}'
    cmds:
      - cmd: >-
          "{{ .MSBUILD }}"
          /m 
          /t:Rebuild 
          /p:Configuration="{{.MSBUILD_CONFIG}}" 
          /p:Platform="{{.MSBUILD_PLATFORM}}" 
          "{{.MSBUILD_SOLUTION}}"
  
  build:
    cmds:
      - for: ['Debug', 'Release']
        task: msbuild
        vars: { CONFIG: '{{ .ITEM }}' }

  cmake-build:
    vars:
      CM_BUILD_CMAKE_PRESET: '{{ .CMAKE_PRESET | default "x64-windows" }}'
    cmds:
      - cmd: cmake --preset "{{ .CM_BUILD_CMAKE_PRESET }}"
      - cmd: cmake --build --preset "{{ .CM_BUILD_CMAKE_PRESET }}"
      - cmd: cmake --build --preset "{{ .CM_BUILD_CMAKE_PRESET }}" --target install

  pre-commit:
    cmds:
      - git add --renormalize .
      - git reset --mixed
      - task revert-whitespace

  revert-whitespace:
    cmds:
      - cmd: git diff -U0 -w --no-color | git apply --cached --ignore-whitespace --unidiff-zero -
